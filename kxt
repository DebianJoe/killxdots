#!/bin/bash

# kxt is a switchable script for useful bash commands #
# it takes each particular tool as an argument #

if [ $# -lt 1 ]; then
    # no tool specified, list tools for user #
    printf "\033[1;31mTools:\033[1;m\n"
    printf "\033[1;32m%10s\033[1;m..%s\n" "dirtree" \
	"display dir and subdirs as a tree"
    printf "\033[1;32m%10s\033[1;m..%s\n" "gitfind" \
	"lists all files tied to git repos"
    printf "\033[1;32m%10s\033[1;m..%s\n" "dirclean" \
	"removes empty directories"
    printf "\033[1;32m%10s\033[1;m..%s\n" "homeclean" \
	"removes backup~ files"
    printf "\033[1;32m%10s\033[1;m..%s\n" "sort" \
	"sorts files and subdirectories by size"
else
case "$1" in
    "dirtree")
	    # display directory tree #
	    ls -R | grep ":$" \
		| sed -e 's/:$//' \
		-e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
	    ;;
    "gitfind")
	    # print listing of all directories #
	    # that contain a .git dir #
	    find ~/ -name ".git" | sed -e 's/\.git//'
	    ;;
    "dirclean")
	    # removes directories with no content #
	    find . -depth  -type d  -empty -exec rmdir {} \;
	    ;;
    "homeclean")
	    # removes files ending with "~" #
	    # prompts user before deletion, for #
	    # added safety #
	    backs=$(find ~/ -name "*~" -print0 | xargs -0)
	    dotbacks=$(find ~/ -name "*~" -print0 | xargs -0)
	    if [ -n "$backs" ]; then
		rm -i $(find ~/ -name "*~" -print0 | xargs -0)
	    elif [ -n "$dotbacks" ]; then
		rm -i $(find ~/ -name ".*~" -print0 | xargs -0)
	    else
		echo "No Backups Found"
	    fi
	    ;;
    "sort")
	    # prints out files and subdirectoreis by size #
	    du -sk ./* | sort -n | awk 'BEGIN{ pref[1]="K"; pref[2]="M"; pref[3]="G";} \
            { total = total + $1; x = $1; y = 1; while( x > 1024 ) \
            { x = (x + 1023)/1024; y++; } \
            printf("%g%s\t%s\n",int(x*10)/ \
            10,pref[y],$2); } END \
            { y = 1; while( total > 1024 ) \
            { total = (total + 1023)/1024; y++; } \
            printf("Total: %g%s\n",int(total*10)/10,pref[y]); }'
	    ;;

    # if no matches found #
    *)	    printf "\033[1;31mNo Matching Tools found\033[1;m\n"
esac
fi
